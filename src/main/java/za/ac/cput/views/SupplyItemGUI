
package za.ac.cput.views;


import za.ac.cput.controller.SupplyLineController;
import za.ac.cput.controller.SupplyOrderController;
import za.ac.cput.domain.Book;
import za.ac.cput.domain.SupplyLine;
import za.ac.cput.domain.SupplyOrder;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.List;

public class SupplyItemGUI extends JPanel implements ActionListener, ItemListener {
    //Constructor
    public SupplyItemGUI(){

    }

    @Override
    public void actionPerformed(ActionEvent e) {

    }

    @Override
    public void itemStateChanged(ItemEvent e) {

    }
    /*
    //Data
    SupplyOrderController supplyOrderController;
    SupplyLineController supplyLineController;
    List<SupplyOrder> orderList= new ArrayList<>();
    List<SupplyLine> itemList= new ArrayList<>();
    List<Book> bookList= new ArrayList<>();
    //Components
    JPanel panel;
    JLabel lblTitle, lblOrderId, lblItemId, lblQuantity;
    JComboBox<String> cbOrders;
    JComboBox<String> cbItems;




    public void refreshOrders () {
        cbOrders.removeAllItems();
        for (SupplyOrder order : supplyOrderController.getAllSupplyOrders()) {
            if (order.getOrderStatus()=="Active")
            cbOrders.addItem(order.getOrderID());
        }

        public void refreshItems () {
            cbItems.removeAllItems();
            for (Book item : supplyLineController.) {
                cbItems.addItem(item.getBookISBN());
            }
        }
        if (cbOrders.getItemCount() > 0) {
            cbOrders.setSelectedIndex(0);
        }
    }
public SupplyItemGUI(){
    cbOrders = new JComboBox<String>();

}
    @Override
    public void actionPerformed(ActionEvent e) {

    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getSource() == cbOrders) {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                String selectedOrderId = (String) cbOrders.getSelectedItem();
                // Handle the selected order ID as needed
                System.out.println("Selected Order ID: " + selectedOrderId);
            }
        }
    }

     */
}

